  変更ログ (app/main.py)

  最初の変更：基本的な定期投稿とリアクション集計機能の実装

   * クラスの変更: discord.Clientからdiscord.ext.commands.Botに変更し、コマンド機能を利用できるようにしました。
   * Intentの追加: リアクションやメンバー情報を取得するために、intents.reactionsとintents.membersを有効化しました。
   * 定期投稿タスク (`weekly_post`) の追加:
       * @tasks.loop(hours=24 * 7)デコレータを使用し、週に一度実行されるタスクを定義しました。
       * タスク内で曜日を確認し、月曜日にのみメッセージをCHANNEL_IDで指定されたチャンネルに投稿するようにしました。
       * 投稿したメッセージのIDをグローバル変数latest_message_idに保存するようにしました。
   * リアクション集計コマンド (`!list_reactions`) の追加:
       * latest_message_idを元にメッセージを取得し、リアクション情報を集計します。
       * 集計結果を、コマンドが実行されたチャンネルに投稿するように実装しました。
   * 環境変数の導入:
       * TOKENとCHANNEL_IDを.envファイルから読み込むようにしました。


  2回目の変更：リアクション集計結果の送信先を別チャンネルに変更

   * `list_reactions`コマンドのロジック変更:
       * リアクションの集計結果を送信するチャンネルを、新しく環境変数REACTION_CHANNEL_IDで指定できるように変更しました。
       * 集計結果はREACTION_CHANNEL_IDのチャンネルに送信されます。
       * コマンドを実行した元のチャンネルには、「〇〇にリアクションリストを送信しました。」という確認メッセージを送信するように変更しました。
   * 環境変数の追加:
       * .envファイルにREACTION_CHANNEL_IDを追加するよう、コードとドキュメントを更新しました。


  3回目の変更:

   * `weekly_task`の実行時刻:
       * @tasks.loop(time=...) を使用して、毎日 JST 10:00 (UTC 01:00) に weekly_task が起動するように設定しました。
       * タスクの冒頭で曜日をチェックし、木曜日でなければ処理を中断するようにしました。
   * リアクションの自動集計:
       * 新しいメッセージを投稿する前に、latest_message_id
         に保存されている前回の投稿のリアクションを集計し、結果を指定されたチャンネルに送信する処理を追加しました。
       * 集計対象のメッセージが見つからない場合などのエラーハンドリングも追加しています。
   * `!list_reactions`コマンドの削除:
       * 手動での集計コマンドは不要になったため、関連するコードをすべて削除しました。
   * `latest_message_id`に関する注意書き:
       * この変数がBotの再起動によってリセットされる可能性があることを、コメントとしてコード内に明記しました。

  これで、毎週木曜日のJST 10:00に、前回のリアクション集計と新しい投稿が自動的に行われるようになります。


  4回目の変更:ユーザーの重複排除

   * ユーザーの重複排除:
       * リアクション集計のロジックを変更しました。
       * reacted_users という set を用意し、リアクションしたユーザー（Botを除く）をすべてこのセットに追加します。set
         は重複した要素を許さないため、同じユーザーが複数回追加されることはありません。
       * 最後に、この set に含まれるユーザーのメンション一覧を生成して、結果として報告するようにしました。
   * 出力形式の変更:
       * 絵文字ごとのリストではなく、リアクションした全ユーザーをまとめた単一のリストとして出力するように変更しました。
       * 出力メッセージに、リアクションした人数も表示するようにしました。（例：「前回のリアクション集計結果（5名）：...」）